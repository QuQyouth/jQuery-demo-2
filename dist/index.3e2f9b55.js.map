{"mappings":"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","sources":["src/jquery.js"],"sourcesContent":["// 后执行 window.$ = \r\nwindow.$ = window.jQuery = function(selectorOrArrayOrTemplate) {\r\n    let elements\r\n    if (typeof selectorOrArrayOrTemplate === 'string') {\r\n        if (selectorOrArrayOrTemplate[0] === '<') {\r\n            // 创建 div\r\n            elements = [createElement(selectorOrArrayOrTemplate)];\r\n        } else {\r\n            elements = document.querySelectorAll(selectorOrArrayOrTemplate)\r\n        }\r\n    } else if (selectorOrArrayOrTemplate instanceof Array) {\r\n        elements = selectorOrArrayOrTemplate\r\n    }\r\n\r\n    function createElement(string) {\r\n        const container = document.createElement('template')\r\n        container.innerHTML = string.trim()\r\n        return container.content.firstChild\r\n    }\r\n\r\n    const api = Object.create(jQuery.prototype) // api的 __proto__ 为 jQuery.prototype\r\n\r\n    Object.assign(api, {\r\n        elements: elements,\r\n        oldApi: selectorOrArrayOrTemplate.oldApi,\r\n    })\r\n    return api\r\n}\r\n\r\njQuery.prototype = {\r\n    constructor: jQuery,\r\n    jquery: true,\r\n    get(index) {\r\n        return this.elements[index];\r\n    },\r\n    appendTo(node) {\r\n        if (node instanceof Element) {\r\n            this.each(el => node.appendChild(el)) // 遍历 elements，对每个 el 进行 node.appendChild 操作\r\n        } else if (node.jquery === true) {\r\n            this.each(el => node.get(0).appendChild(el)) // 遍历 elements，对每个 el 进行 node.get(0).appendChild(el))  操作\r\n        }\r\n    },\r\n    append(children) {\r\n        if (children instanceof Element) {\r\n            this.get(0).appendChild(children);\r\n        } else if (children instanceof HTMLCollection) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                this.get(0).appendChild(children[i]);\r\n            }\r\n        } else if (children.jquery === true) {\r\n            children.each(node => this.get(0).appendChild(node));\r\n        }\r\n    },\r\n    find(selector) {\r\n        let array = []\r\n        this.each(n => {\r\n            array.push(...n.querySelectorAll(selector))\r\n        })\r\n\r\n        // for (let i = 0; i < elements.length; i++) {\r\n        //     const elements2 = Array.from(elements[i].querySelectorAll(selector))\r\n        //     array = [...array, ...elements2]\r\n        // }\r\n\r\n        array.oldApi = this //保存旧的api方便end退回\r\n\r\n        // const newApi = jQuery(array)\r\n        return jQuery(array)\r\n    },\r\n    each(fn) {\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            fn.call(null, this.elements[i], i)\r\n        }\r\n        return this\r\n    },\r\n    parent() {\r\n        const array = []\r\n        this.each(node => {\r\n                if (array.indexOf(node.parentNode) === -1) {\r\n                    array.push(node.parent)\r\n                }\r\n            })\r\n            // parent函数返回的是节点的parent，再次封装jQuery(array)方便.parent后续的链式操作\r\n        return jQuery(array)\r\n    },\r\n    children() {\r\n        const array = []\r\n        this.each(node => {\r\n            // 将所有目标节点的儿子push到array中\r\n            array.push(...node.children)\r\n        })\r\n        return jQuery(array)\r\n    },\r\n    addClass(className) {\r\n        // 闭包：函数访问外部的变量\r\n        // 用闭包维持 elements 函数不死，element就不会销毁\r\n\r\n        this.each(n => n.classList.add(className))\r\n\r\n        // for (let i = 0; i < elements.length; i++) {\r\n        //     elements[i].classList.add(className)\r\n        // }\r\n\r\n        // return api\r\n        return this\r\n    },\r\n    print() {\r\n        console.log(this.elements);\r\n    },\r\n    end() {\r\n        return this.oldApi\r\n    }\r\n}"],"names":[],"version":3,"file":"index.3e2f9b55.js.map","sourceRoot":"/__parcel_source_root/"}